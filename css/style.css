body {
    background-color: #c2c2c2;
}

* {
    background-color: #c2c2c2 !important;
    outline: none !important;
    border: none !important;
}

:root {
    --neumorphic-shadow: 
    inset 12px 12px 20px rgba(184, 184, 184, 0),
        inset -12px -12px 20px rgba(204, 204, 204, 0),
    12px 12px 20px rgba(184, 184, 184, 1),
        -12px -12px 20px rgba(204, 204, 204, 1)
        ;

    --neumorphic-shadow-pressed: inset 12px 12px 20px rgba(184, 184, 184, 1),
        inset -12px -12px 20px rgba(204, 204, 204, 1),
        12px 12px 20px rgba(184, 184, 184, 0),
        -12px -12px 20px rgba(204, 204, 204, 0);
}

#app {
    padding: 1rem;
    /* margin: 1rem; */
    width: 100vw;
    height: 90vh;
    display: grid;
  
}
#nav {
    width: 100%;
    height: 10vh;
}

#nav>.nav-links {
    display: flex;
    padding: 1rem !important;
}

#nav>.nav-links>.nav-link {
    margin: .5rem 1rem !important;
    border-radius: 1rem;
    cursor: pointer;
}

#app.expressionCalculator{
    grid-template-areas: "expression expression result"
                        "special numbers operands";
                        gap:2rem;
    /* align-items: center; */
    justify-content: center;
    grid-template-rows: repeat(3,1fr);
    grid-template-columns: repeat(3,1fr);

}
.nav-link>a {
    text-decoration: none;
    color: #363636;
    text-align: center;
}

.resultDisplay {
    height: 20vh;
    grid-area: result;
}
.expressionDisplay{
    grid-area: expression;
}

/* .functionalityContainer {
    height: 60vh;
    display: grid;
    gap: 1rem;
    grid-template: 
        "special numbers operands";
    grid-template-rows: 1fr 9fr;
    justify-content: space-around;
}

@media only screen and (max-width: 768px) {
    .functionalityContainer {
        grid-template:
            "special"
            "logical"
            "numbers"
            "operands";
        justify-content: space-around;

    }
} */

.specialContainer {
    width: 100%;
    display: flex;
    flex-direction: column;
    grid-area: special;
}

.specialContainer>.neumorphic.button {
    /* width: 20%; */
    height: 70%;

}

.numbersContainer {
    height: 100%;
    display: flex;
    flex-direction: column;
    border-radius: 1rem;
    padding: 0 2rem;
    grid-area: numbers;
}

.numbersContainer>.numbersRow {
    width: 100%;
    display: flex;
    justify-content: space-around;
    align-items: center;
    height: 33%;
    margin: 2rem 0;
}

.numbersRow>.neumorphic.button {
    width: 30% !important;
    /* margin: 3rem; */
    height: 100%;
}

@media only screen and (max-width:768px) {
    .numbersContainer {
        width: 100%;
    }
}

.logicalContainer {
    display: flex;
    flex-direction: column;
    width: 20vw;
    justify-content: space-between;
    padding: 1.5rem;
    /* width: 100%; */
}

.logicalContainer>button {
    flex: 33%;
    font-size: xx-large;
}

@media only screen and (max-width:768px) {
    .logicalContainer {
        flex-direction: row;
        width: 100%;
    }

    .logicalContainer>button {
        margin: .5rem !important;
        aspect-ratio: 1/1;
        width: 15% !important;
    }
}



.operandsContainer {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    padding: 1.5rem;
    grid-area: operands;

}

.operandsContainer>button {
    flex: 33%;
    font-size: xx-large;

}

@media only screen and (max-width:768px) {
    .operandsContainer {
        flex-direction: row;
        width: 100%;
    }

    .operandsContainer>button {
        margin: .5rem !important;
        aspect-ratio: 1/1;
        width: 15% !important;
    }
}

.neumorphic {
    box-shadow: var(--neumorphic-shadow);
    transition: box-shadow 250ms ease-in-out;
}

.neumorphic:hover {
    box-shadow: var(--neumorphic-shadow-pressed);
}

.neumorphic.button {
    border-radius: 1rem;
    margin: 1rem;
    font-size: x-large;
    text-align: center;
    vertical-align: middle;
}

.neumorphic-pressed {
    box-shadow: var(--neumorphic-shadow-pressed);
    border-radius: 1rem;
}


